name: Push Master

on:
  push:
    branches:
      - 'master'

jobs:
  back-end:
    name: Back-End
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.build.outputs.current_version }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Check style
        run: mvn checkstyle:check

      - name: Build
        id: build
        run: |
          mvn clean package -P production
          echo current_version=$(echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)) >> $GITHUB_OUTPUT

      - name: Publish test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: 'target/surefire-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: jar
          path: ${{ github.workspace }}/target/suricate.jar

      - name: Sonar
        run: mvn verify sonar:sonar -DcentralAnalyzerEnabled=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  front-end:
    name: Front-End
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Build
        run: |
          npm install --no-progress
          npm run build -- --configuration production

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test-ci

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: [ front-end, back-end ]
    if: endsWith(needs.back-end.outputs.current_version, '-SNAPSHOT')
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Docker
        run: mvn package -P production -DskipTests jib:build -Djib.to.auth.username=$DOCKER_USER -Djib.to.auth.password=$DOCKER_TOKEN
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
