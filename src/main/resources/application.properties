server.port=8080
server.error.whitelabel.enabled=false

spring.profiles.active=h2
spring.flyway.table=schema_version

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.search.default.directory_provider=filesystem
spring.jpa.properties.hibernate.search.default.indexBase=/tmp/suricate-io/suricate/lucene/indexes/
spring.jpa.open-in-view=false

spring.security.oauth2.client.registration.github.client-id=e1ecdd363b0f6fa2ee14
spring.security.oauth2.client.registration.github.client-secret=902fdbac8ce24b4dffa80aa9b2c7a2622e99ea71
spring.security.oauth2.client.registration.gitlab.client-id=d86b5e0e260d13db32680e7f1f94ef421c85203009c619e11ba75a357cd0c30a
spring.security.oauth2.client.registration.gitlab.client-secret=81b3e6866e58e709a71eb3a4cb41a4d52b08a7e6fa0dec90d91dfb83c09f05ee
spring.security.oauth2.client.registration.gitlab.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.gitlab.redirect-uri=http://localhost:8080/login/oauth2/code/gitlab

# For GitLab, provider needs to be defined manually
# whereas it seems already predefined by Spring Boot for GitHub
spring.security.oauth2.client.provider.gitlab.authorization-uri=https://gitlab.com/oauth/authorize
spring.security.oauth2.client.provider.gitlab.token-uri=https://gitlab.com/oauth/token
spring.security.oauth2.client.provider.gitlab.user-info-uri=https://gitlab.com/api/v4/user
spring.security.oauth2.client.provider.gitlab.jwk-set-uri=https://gitlab.com/oauth/discovery/keys
spring.security.oauth2.client.provider.gitlab.user-name-attribute=username

spring.mustache.check-template-location=false
spring.cache.jcache.config=classpath:ehcache3.xml
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

management.endpoint.health.enabled=true
management.endpoint.configprops.enabled=true
management.endpoint.flyway.enabled=true
management.endpoints.enabled-by-default=false
management.endpoints.jmx.exposure.include=env
management.endpoints.jmx.exposure.exclude=beans
management.endpoints.web.exposure.include=configprops
management.server.base-path=/api/manage

logging.file.name=/tmp/suricate-io/suricate/suricate.log
logging.level.io.suricate.monitoring=INFO
logging.level.net.sf.jmimemagic.MagicParser=off
logging.level.org.springframework.boot.actuate=INFO
logging.level.org.springframework.security.web.csrf.CsrfFilter=INFO
logging.level.org.springframework.web=INFO

jasypt.encryptor.password=ZAkOZ9rIJCDVk6a10
jasypt.encryptor.stringOutputType=hexadecimal

# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the frontend client in the /oauth2/authorization/<provider> request.
application.authentication.oauth2.authorizedRedirectUris=http://localhost:4200
application.authentication.provider=database
application.authentication.ldap.url=
application.authentication.ldap.userSearchFilter=
application.authentication.ldap.firstNameAttributName=
application.authentication.ldap.lastNameAttributName=
application.authentication.ldap.mailAttributName=
application.authentication.ldap.username=
application.authentication.ldap.password=
application.authentication.ldap.userSearchBase=
application.authentication.jwt.signingKey=sVz7z$m4Atcv3q-[a;$qX)OqCuVTrw
application.authentication.jwt.tokenValidityMs=86400000

application.cors.allowCredentials=true
application.cors.allowedHeaders=Content-Type, Accept, Authorization, X-Requested-With
application.cors.allowedMethods=GET,POST,OPTIONS,DELETE,PUT
application.cors.allowedOriginPatterns=*
application.cors.maxAge=3600

application.ssl.keyStore.path=
application.ssl.keyStore.password=
application.ssl.keyStore.type=
application.ssl.trustStore.path=
application.ssl.trustStore.password=
application.ssl.trustStore.type=

application.swagger.title=Suricate API
application.swagger.description=Rest API for integrating with backend layer.
application.swagger.version=1
application.swagger.termsOfServiceUrl=null
application.swagger.license=Apache 2.0
application.swagger.licenseUrl=http://www.apache.org/licenses/LICENSE-2.0.html
application.swagger.groupName=suricate-api
application.swagger.protocols=http,https
application.swagger.defaultIncludePattern=/api/.*
application.swagger.contactName=Michelin
application.swagger.contactUrl=https://github.com/michelin/suricate
application.swagger.contactEmail=loic.greffier_ext@michelin.com

application.widgets.updateEnable=true

proxy.host=
proxy.port=
proxy.noProxyDomains=
