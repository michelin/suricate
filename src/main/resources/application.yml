##########################################
###         Default properties         ###
##########################################
info:
  app:
    version: 1.0-SNAPSHOT
server:
  port: 8080
  error:
    whitelabel:
      enabled: false

### Spring ###
spring:
  profiles:
    include: h2
  datasource:
    url: null
    username: null
    password: null
    continueOnError: true
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
    initialization-mode: always
  flyway:
    table: schema_version
  jpa:
    hibernate:
      ddl-auto: validate
      use-new-id-generator-mappings: false
    properties:
      hibernate:
        search:
          default:
            directory_provider: filesystem
            indexBase: /tmp/suricate-io/suricate/lucene/indexes/
  mustache:
    check-template-location: false
  cache:
    jcache:
      config: 'classpath:ehcache3.xml'
  servlet:
    multipart:
      max-file-size: 10Mb
      max-request-size: 10Mb

security:
  oauth2:
    client:
      client-id: suricateAngular
      client-secret: suricateAngularSecret

### Actuator ###
management:
  endpoints:
    health:
      enabled: true
    flyway:
      web:
        enabled: true
    configprops:
      enabled: true
    enabled-by-default: false
    jmx:
      exposure:
        include: env
        exclude: beans
    web:
      exposure:
        include: configprops
  server:
    servlet:
      context-path: /api/manage

### Logging ###
logging:
  file: /tmp/suricate-io/suricate/suricate.log
  level:
    io.suricate.monitoring: DEBUG
    net.sf.jmimemagic.MagicParser: 'off'
    org.springframework:
      boot:
        actuate: INFO
      security:
        web:
          csrf:
            CsrfFilter: DEBUG

### Encryptor ###
jasypt:
  encryptor:
    password: ZAkOZ9rIJCDVk6a10
    stringOutputType: hexadecimal

### Application ###
application:
  authentication:
    provider: database
    ldap:
      url: null
      userSearchFilter: null
      firstNameAttributName: null
      lastNameAttributName: null
      mailAttributName: null
      username: null
      password: null
      userSearchBase: null
    jwt:
      secret: '${random.value}'
      tokenValidity: 1800
      tokenValidityRememberMe: 2592000
  cors:
    allow-credentials: true
    allowed-headers: 'Content-Type, Accept, Authorization, X-Requested-With'
    allowed-methods: 'GET,POST,OPTIONS,DELETE,PUT'
    allowed-origins: '*'
    max-age: 3600
  oauth:
    client: suricateAngular
    secret: suricateAngularSecret
  ssl:
    keyStore:
      path: null
      password: null
      type: null
    trustStore:
      path: null
      password: null
      type: null
  widgets:
    updateEnable: true
  swagger:
    title: Suricate API
    description: Rest API for integrating with backend layer.
    version: 1
    termsOfServiceUrl: null
    license: Apache 2.0
    licenseUrl: 'http://www.apache.org/licenses/LICENSE-2.0.html'
    groupName: suricate-api
    protocols: 'http,https'
    defaultIncludePattern: /api/.*
    contactName: Suricate-io
    contactUrl: 'https://github.com/suricate-io/suricate'
    contactEmail: null

### Proxy ###
proxy:
  host: null
  port: null
  noProxyDomains: null
